# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master,feature/*,develop]
  pull_request:
    branches: [ master,develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@master
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Install
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test
      - name: Build
        run: npm run build
      - name: Deploy
        if: github.ref == 'refs/heads/master'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
            --recursive \
            --region ap-northeast-2 \
            dist/apps/landingpage s3://despairdrivendevelopment.net
      - name: Deploy api server
        uses: appleboy/ssh-action@master
        with:
          username: ${{secrets.api_host_user}}
          host: ${{secrets.api_host}}
          key: ${{ secrets.SSH_DEPLOYMENT_KEY }}
          script: |

            runContainer () {
            sudo docker-compose -f api-docker-compose.yml up
            }

            checkIfDockerIsInstalled () {
            sudo docker -v
            dockerIsInstalled=$?
            docker-compose -v
            if [[ $? != 0 || $dockerIsInstalled != 0 ]]
            then
            sudo apt-get update
            sudo apt-get remove docker docker-engine docker.io
            sudo apt install docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            sudo docker-compose --version
             fi
             }

            checkIfGitIsInstalled(){
            git --version
            if [ $? != 0 ]
            then
            sudo apt update
            sudo apt install git
            fi
            }

            checkIfConsulIsInstalled(){
            consul -v
            if [ $? != 0 ]
            then
            export VER="1.7.1"
            wget https://releases.hashicorp.com/consul/${VER}/consul_${VER}_linux_amd64.zip
            unzip consul_${VER}_linux_amd64.zip
            sudo mv consul /usr/local/bin/
            sudo groupadd --system consul
            sudo useradd -s /sbin/nologin --system -g consul consul
            sudo mkdir -p /var/lib/consul
            sudo chown -R consul:consul /var/lib/consul
            sudo chmod -R 775 /var/lib/consul
            sudo mkdir /etc/consul.d
            sudo chown -R consul:consul /etc/consul.d
            fi
            }

            checkIfGitIsInstalled;
            checkIfDockerIsInstalled;
            if [ -d "./dev-blog" ]
            then
                cd dev-blog
            else
                git clone https://github.com/PierreStephaneVoltaire/dev-blog.git
                cd dev-blog
            fi
            runContainer;
